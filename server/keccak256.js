var sha3 = require('js-sha3').keccak256;

const ethers = require('ethers');

var hash = sha3('hello');
console.log(hash);

let num = BigInt("14864030992728655368375342493362582743109464943830173085505515312453215661600");
console.log(num.toString(16));

// 0x...が必要

// ["0x20dcbe4fd28739879ba77b89c580314cfc25c772d19e1a39f1d3e26a06a52e20", "0x060db6b922680ce600e1a7843c9410686d8d23aed77d49dde5fa7a9a7d76b765"],

proof = {
          "pi_a": [
                    "18492996952015560900928178500088247795615144023578815701601418215929582261392",
                    "21628015866053771331556811071283672427183480747691904470137388462443492472362",
                    "1"
          ],
          "pi_b": [
                    [
                              "6559851294648767079769984423988807940121590866174027845418656869931681294000",
                              "12832973023849703759425577257065370800464205504807174895685827498526368426315"
                    ],
                    [
                              "7688140696271355620185238626454479886601960442471329598437704971546391550203",
                              "4880532491281675207456942689519740847312665493050882516383685568315462878370"
                    ],
                    [
                              "1",
                              "0"
                    ]
          ],
          "pi_c": [
                    "8267861968010635883691246628102719389278311265481120916979569689271485389551",
                    "13945226071740599494713484893039333373935604267689341592615273231029995873159",
                    "1"
          ],
          "protocol": "groth16",
          "curve": "bn128"
}

let a = proof["pi_a"];
a = ["0x" + BigInt(`${a[0]}`).toString(16), "0x" + BigInt(`${a[1]}`).toString(16)];
console.log(a);

let b = proof["pi_b"];

let b_0x = [];
for (let i = 0; i < b.length; i++) {
          let bi = BigInt(`${b[i][0]}`).toString(16);
          while (bi.length < 64) {
                    bi = "0" + bi;
          }
          let bii = BigInt(`${b[i][1]}`).toString(16);
          while (bii.length < 64) {
                    bii = "0" + bii;
          }
          b_0x.push(["0x" + bii, "0x" + bi]);
}
console.log(b);
console.log(b_0x[0], b_0x[1], '----');

let c = proof["pi_c"];
c = ["0x" + BigInt(`${c[0]}`).toString(16), "0x" + BigInt(`${c[1]}`).toString(16)];
console.log(c);

let publicInput = BigInt("6").toString(16);
while (publicInput.length < 64) {
          publicInput = "0" + publicInput;
}
publicInput = "0x" + publicInput;
console.log(publicInput);

// ["0x20dcbe4fd28739879ba77b89c580314cfc25c772d19e1a39f1d3e26a06a52e20", 
// "0x060db6b922680ce600e1a7843c9410686d8d23aed77d49dde5fa7a9a7d76b765"],

// [["0x2a52e82f60aa8f874e97eefbb73116f222a15de0c4b9bb9931770fc0ed53e41c",
// "0x0ed2324631d59ee42ccb471e0174a0549eea0f7464ce797c0de52359ddd119c6"],
// ["0x238e5f4c4a41529f54ec4d22023dae8fc7a6cc76ea9179d01779dc97126ab984", 
// "0x2de85a3858cc85a47290c63c356cdf57cf3e07f2598d90a6992f7ac1ad29e8ad"]],

// ["0x1e2b196a712c64b364addecf9fd34fa7ac7d0b8d88fd2b9dbb5df28f01f77792", 
// "0x287e60a36e6b3d2cfc24a875a52723dc7da6e2cac5296a69eda4e7bc097beed3"],

// ["0x0000000000000000000000000000000000000000000000000000000000000006"]
// ["0000000000000000000000000000000000000000000000000000000000000006"]


// -------------------------------------------------------------------------------------------------------------------

// ["0x28e2aa5463fe443d47257fd66d91eafa871a849b0575724ffcc4d265c70d1490", 
// "0x2fd105eec67b3b1ed79d3bd9f6fa9a39114a3f9eff3a0ca32d07fcb38f36f62a"],

// [
//        ["0x1c5f3490b7790c03b1d30e4d0761eb039ca7f90b661306769096ddb5824d694b", "0x0e80be87b2728ebe2f678309239034578f0a32f3d2baa3a1052c05ae4fe7a6b0"],
//        ["0x0aca48935a58d46bb61519790fcbb70ee5a5ef80f36f62fdd4ff770d938984a2", "0x10ff555b9460a828160ae104d237060c1899014a709264962c12fdbaefe118fb"]
// ],

// ["0x124771aca5d5ff5135b7c08ba8ff6c9e02424eb8a77edc5cf48794bf1b28daef", 
// "0x1ed4b7df2e260e7138677db42e04f485abca6045127c100dd8f474a324c0a387"],

// ["0x0000000000000000000000000000000000000000000000000000000000000006"]

// ----------------------------------------------------------------------------------------------------------------------

// [
//           '0x28e2aa5463fe443d47257fd66d91eafa871a849b0575724ffcc4d265c70d1490',
//           '0x2fd105eec67b3b1ed79d3bd9f6fa9a39114a3f9eff3a0ca32d07fcb38f36f62a'
// ]
// [
//           [
//                     '0xe80be87b2728ebe2f678309239034578f0a32f3d2baa3a1052c05ae4fe7a6b0',
//                     '0x1c5f3490b7790c03b1d30e4d0761eb039ca7f90b661306769096ddb5824d694b'
//           ],
//           [
//                     '0x10ff555b9460a828160ae104d237060c1899014a709264962c12fdbaefe118fb',
//                     '0xaca48935a58d46bb61519790fcbb70ee5a5ef80f36f62fdd4ff770d938984a2'
//           ]
// ]
// [
//           '0x124771aca5d5ff5135b7c08ba8ff6c9e02424eb8a77edc5cf48794bf1b28daef',
//           '0x1ed4b7df2e260e7138677db42e04f485abca6045127c100dd8f474a324c0a387'
// ]